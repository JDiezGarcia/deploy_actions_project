pipeline {
    agent any
    triggers {
        pollSCM('*/1 * * * *')
    }
    parameters {
        string(name: 'executor', description: 'What is your name?', defaultValue: 'System' )
        string(name: 'subject', description: 'Why are you executing the pipeline?', defaultValue: 'We detected a change in the repository')
        string(name: 'email', description: 'Put your email to recieve a notificiation with the results', defaultValue: 'fco.javier.diez.garcia@gmail.com')
    }
    stages {
        stage ('Checkout SCM') {
            steps {
                script {
                    STAGE_NAME = 'Checkout SCM'

                    checkout scm
                    result = sh (script: "git log -1 | grep '.*\\[ci skip\\].*'", returnStatus: true)
                    if (result == 0) {
                        echo ("'ci skip' spotted in git commit. Aborting.")
                        success ("'ci skip' spotted in git commit. Aborting.")
                    }
                }
            }
        }
        stage('Lint') {
            steps {
                script {
                    sh 'npm install'
                    env.lintResult = sh(script: 'npm run lint', returnStatus: true)
                }
            }
        }
        stage('Cypress') {
            steps {
                script {
                    sh 'apt-get install -y lsof ibgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb'
                    sh 'npm install cypress --save-dev'
                    sh 'npm run build && npm run start &'
                    env.cypressResult = sh(script: 'cypress run --headed', returnStatus: true)
                }
            }
        }
        stage('Create Badge') {
            steps {
                script {
                    env.badgeResult = sh(script: "node jenkinsScripts/create_badge/dist/index.js ${env.cypressResult}", returnStatus: true)
                    sh 'git config user.email \'jdiez.actions@github.com\''
                    sh 'git config user.name \'JDiezActions\' '
                    withCredentials([string(credentialsId: 'TOKEN_GITHUB', variable: 'TOKEN')]) {
                        sh 'git remote set-url origin https://JDiezGarcia:${TOKEN}@github.com/JDiezGarcia/deploy_actions_project.git'
                    }
                    sh 'git add .'
                    sh 'git commit --allow-empty -m \'[ci skip] Readme\''
                    sh 'git push origin HEAD:jenkins'
                }
            }
        }
        stage('Results') {
            steps {
                script {
                    sh "echo 'executor: ${params.executor}'"
                    sh "echo 'subject: ${params.subject}'"
                    sh "echo 'email: ${params.email}'"
                    sh "echo 'lint: ${env.lintResult}'"
                    sh "echo 'cypress: ${env.cypressResult}'"
                    sh "echo 'badge: ${env.badgeResult}'"
                }
            }
        }
    }
}
